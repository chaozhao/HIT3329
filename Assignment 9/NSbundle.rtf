{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf230
{\fonttbl\f0\fswiss\fcharset0 CenturyGothic;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red130\green53\blue144;\red38\green38\blue38;\red252\green252\blue252;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww17780\viewh12800\viewkind0
\deftab720
\pard\pardeftab720\qj

\f0\b\fs28 \cf2 Does File Exist
\f1\b0\fs24 \cf3 \cb4 \
	NSString *path;\
	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\
	path = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"SomeDirectory"];\
	path = [path stringByAppendingPathComponent:@"SomeFileName"];\
	if ([[NSFileManager defaultManager] fileExistsAtPath:path])\
	\{\
\
	\}\
\pard\pardeftab720\sa240\qj

\f0 \cf3 \cb1 \
\pard\pardeftab720\qj

\b\fs28 \cf2 Delete File
\f1\b0\fs24 \cf3 \cb4 \
	NSString *path;\
	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\
	path = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"SomeDirectory"];\
	path = [path stringByAppendingPathComponent:@"SomeFileName"];\
	NSError *error;\
	if ([[NSFileManager defaultManager] fileExistsAtPath:path])		//Does file exist?\
	\{\
		if (![[NSFileManager defaultManager] removeItemAtPath:path error:&error])	//Delete it\
		\{\
			NSLog(@"Delete file error: %@", error);\
		\}\
	\}\

\f0\b\fs28 \cf2 \cb1 Delete DIrectory
\f1\b0\fs24 \cf3 \cb4 \
	NSString *path;\
	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\
	path = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"SomeDirectoryName"];\
	NSError *error;	\
\
	if ([[NSFileManager defaultManager] fileExistsAtPath:path])	//Does directory exist?\
	\{\
		if (![[NSFileManager defaultManager] removeItemAtPath:path error:&error])	//Delete it\
		\{\
			NSLog(@"Delete directory error: %@", error);\
		\}\
	\}\

\f0\b\fs28 \cf2 \cb1 Create Directory
\f1\b0\fs24 \cf3 \cb4 \
	NSString *path;\
	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\
	path = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"SomeDirectoryName"];\
	NSError *error;\
	if (![[NSFileManager defaultManager] fileExistsAtPath:path])	//Does directory already exist?\
	\{\
		if (![[NSFileManager defaultManager] createDirectoryAtPath:path\
									   withIntermediateDirectories:NO\
														attributes:nil\
															 error:&error])\
		\{\
			NSLog(@"Create directory error: %@", error);\
		\}\
	\}\

\f0\b\fs28 \cf2 \cb1 Save NSData File
\f1\b0\fs24 \cf3 \cb4 \
	NSData *file;\
	file = ...\
	NSString *path;\
	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\
	path = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"SomeDirectoryName"];\
	path = [path stringByAppendingPathComponent:@"SomeFileName"];\
\
        [[NSFileManager defaultManager] createFileAtPath:path\
                                                        contents:FileData\
                                                      attributes:nil];\
\pard\pardeftab720\sa240\qj

\f0 \cf3 \cb1 You can test the bool result of createFileAtPath if desired. A common reason for it to fail is if you are writing to a directory that doesn\'92t exist \'96 you have to create the directory first.\
\pard\pardeftab720\qj

\b\fs28 \cf2 Load File
\f1\b0\fs24 \cf3 \cb4 \
    NSString *path;\
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\
    path = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"My Directory"];\
    path = [path stringByAppendingPathComponent:@"My Filename"];\
\
    if ([[NSFileManager defaultManager] fileExistsAtPath:path])\
    \{\
        //File exists\
        NSData *file1 = [[NSData alloc] initWithContentsOfFile:path];\
        if (file1)\
        \{\
            [self MyFunctionWantingAFile:file1];\
            [file1 release];\
        \}\
    \}\
    else\
    \{\
        NSLog(@"File does not exist");\
    \}\

\f0\b\fs28 \cf2 \cb1 Move File
\f1\b0\fs24 \cf3 \cb4 \
	[[NSFileManager defaultManager] moveItemAtPath:MySourcePath toPath:MyDestPath error:nil];\

\f0\b\fs28 \cf2 \cb1 List Files
\f1\b0\fs24 \cf3 \cb4 \
    //----- LIST ALL FILES -----\
    NSLog(@"LISTING ALL FILES FOUND");\
\
    int Count;\
    NSString *path;\
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\
    path = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"SomeDirectoryName"];\
    NSArray *directoryContent = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:path error:NULL];\
    for (Count = 0; Count < (int)[directoryContent count]; Count++)\
    \{\
        NSLog(@"File %d: %@", (Count + 1), [directoryContent objectAtIndex:Count]);\
    \}\
\pard\pardeftab720

\f0 \cf3 \cb1 \
}